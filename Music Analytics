#In this SQL, I'm querying a database with multiple tables in it to quantify statistics about customer and order data.

#1 Show Customers (their full names, customer ID, and country) who are not in the US.

SELECT CustomerId, FirstName, LastName, Country
FROM chinook.customers
WHERE Country <> 'USA';

#2 Show only the Customers from Brazil.

SELECT CustomerId, FirstName, LastName, Country
FROM chinook.customers
WHERE Country = 'Brazil';

#3 Find the Invoices of customers who are from Brazil. The resulting table should show the customer's full name, Invoice ID, Date of the invoice, and billing country.

SELECT c.FirstName, c.LastName, i.InvoiceId, i.InvoiceDate, i.BillingCountry
FROM chinook.customers c
JOIN chinook.invoices i
ON c.CustomerId = i.CustomerId
WHERE c.Country = 'Brazil';

#4 Show the Employees who are Sales Agents.

SELECT *
FROM chinook.employees
WHERE Title = 'Sales Support Agent';

#5 Find a unique/distinct list of billing countries from the Invoice table.

SELECT distinct BillingCountry
FROM chinook.invoices;

#6 Provide a query that shows the invoices associated with each sales agent. The resulting table should include the Sales Agent's full name.

SELECT e.LastName, e.FirstName, i.InvoiceId
FROM chinook.employees e
JOIN chinook.customers c 
ON e.EmployeeId = c.SupportRepId
JOIN chinook.invoices i
ON c.CustomerId = i.CustomerId;

#7 Show the Invoice Total, Customer name, Country, and Sales Agent name for all invoices and customers.

SELECT c.LastName AS CustomerLastName, c.FirstName AS CustomerFirstName, i.Total, c.Country AS CustomerCountry, e.LastName AS SalesRepLastName, e.FirstName AS SalesRepFirstName, i.InvoiceId
FROM chinook.employees e
JOIN chinook.customers c 
ON e.EmployeeId = c.SupportRepId
JOIN chinook.invoices i
ON c.CustomerId = i.CustomerId;

#8 How many Invoices were there in 2009?

SELECT COUNT(InvoiceId)
FROM chinook.invoices
WHERE InvoiceDate LIKE '2009%';


#9 What are the total sales for 2009?

SELECT SUM(Total) AS TotalSales
FROM chinook.invoices
WHERE InvoiceDate LIKE '2009%';

#10 Write a query that includes the purchased track name with each invoice line ID.

ELECT ii.InvoiceLineId, ii.TrackId, t.Name
FROM chinook.invoice_items ii
JOIN chinook.tracks t
ON ii.TrackId = t.TrackId;

#11 Write a query that includes the purchased track name AND artist name with each invoice line ID.

SELECT ii.InvoiceLineId, ii.TrackId, t.Name AS TrackName, a.Name AS ArtistName
FROM chinook.invoice_items ii
JOIN chinook.tracks t
ON ii.TrackId = t.TrackId
JOIN chinook.albums al
ON t.AlbumId = al.AlbumId
JOIN chinook.artists a
ON al.ArtistId = a.ArtistId;

#12 Provide a query that shows all the Tracks, and include the Album name, Media type, and Genre.

SELECT t.Name AS Track, al.Title AS Album, m.Name AS MediaType, g.Name AS Genre
FROM tracks t
JOIN albums al
ON t.AlbumId = al.AlbumId
JOIN media_types m
ON t.MediaTypeId = m.Media TypeId
JOIN genres g
ON t.GenreId = g.GenreId;

#13 Show the total sales made by each sales agent.

SELECT e.LastName, e.FirstName, ROUND(SUM(i.Total),2) AS TotalSales
FROM invoices i
JOIN customers c
ON i.CustomerId = c.CustomerId
JOIN employees e
ON c.SupportRepId = e.EmployeeId
GROUP BY e.EmployeeId;

#14 Which sales agent made the most dollars in sales in 2009?

SELECT e.LastName, e.FirstName, ROUND(SUM(i.Total),2) AS TotalSales
FROM invoices i
JOIN customers c
ON i.CustomerId = c.CustomerId
JOIN employees e
ON c.SupportRepId = e.EmployeeId
WHERE InvoiceDate LIKE '2009%'
GROUP BY e.EmployeeId
ORDER BY TotalSales desc
LIMIT 1;

#15 Which method of categorization is more informative Playlist or Genre? 

SELECT p.Name AS 'Playlist Name', COUNT(pt.TrackId) AS Tracks
FROM playlists p
LEFT JOIN playlist_track pt
ON p.PlaylistId = pt.PlaylistId
GROUP BY p.Name;

SELECT g.Name AS Genre, COUNT(t.Name) AS Tracks
FROM genres g
LEFT JOIN tracks t
ON g.GenreId = t.GenreId
GROUP BY g.Name;
