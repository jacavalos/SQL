/* Create table about famous people and what they do here */

CREATE TABLE actors (id INTEGER PRIMARY KEY, name text);

INSERT INTO actors VALUES (1, "Ryan Reynolds"),
(2, "Blake Lively"),
(3, "Hugh Jackman"),
(4, "Ryan Gosling"),
(5, "Eva Mendes"),
(6, "Emma Stone"),
(7, "Margot Robbie"),
(8, "Tom Ackerley");

CREATE TABLE movies (id INTEGER PRIMARY KEY, title text);

INSERT INTO movies VALUES (1, "Green Lantern"),
(2, "X-Men Origins: Wolverine"),
(3, "Barbie"),
(4, "Deadpool 3"),
(5, "The Place Beyond the Pines"),
(6, "Crazy, Stupid, Love"),
(7, "La La Land"),
(8, "Harry Potter and the Prisoner of Azkaban");

CREATE TABLE cast (id INTEGER PRIMARY KEY, title integer, actor_1 integer, actor_2 integer);

INSERT INTO cast VALUES (1, 1, 1, 2),
(2, 2, 1, 3),
(3, 3, 7, 4),
(4, 4, 1, 3),
(5, 5, 4, 5),
(6, 6, 4, 6),
(7, 7, 4, 6),
(8, 8, 8, "NULL");

SELECT * FROM cast;

-- Tell me which actors starred in each movie.

SELECT c.id, m.title, a.name AS actor_1, b.name AS actor_2 FROM cast c
LEFT JOIN movies m
ON c.title = m.id
LEFT JOIN actors a
ON c.actor_1 = a.id
LEFT JOIN actors b
ON c.actor_2 = b.id;


CREATE TABLE married (id INTEGER PRIMARY KEY, spouse_1 integer, spouse_2 integer);

INSERT INTO married VALUES (1, 1, 2),
(2, 4, 5),
(3, 7, 8);

-- Tell me which actors are married to each other.

SELECT t.id, h.name AS spouse_1, w.name AS spouse_2
FROM married t
JOIN actors h
ON t.spouse_1 = h.id
JOIN actors w
ON t.spouse_2 = w.id;
