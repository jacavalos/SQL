# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

#1 Who was the most popular artist in 2021?

SELECT artist_name, SUM(popularity)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY SUM(popularity) desc
LIMIT 1;

#2 Who was the least popular artist in 2021?

SELECT artist_name, SUM(popularity)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY SUM(popularity) asc
LIMIT 1;

#3 Is there a correlation between the popularity of a song and the danceability it possesses?

SELECT artist_name, track_name, popularity, danceability
FROM BIT_DB.Spotifydata
ORDER BY popularity desc;

#4 Is the popularity of an artist actually determined by their average popularity?

SELECT artist_name, AVG(popularity)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY AVG(popularity) desc
LIMIT 10;

SELECT artist_name, AVG(popularity)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY AVG(popularity) asc
LIMIT 10;

#5 How many songs does each artist feature on this list?

SELECT artist_name, COUNT(artist_name)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY COUNT(artist_name) desc;

#6 How much does having multiple songs on this list impact the Top 10 Most Popular Artists when you compare the SUM of popularity to the AVG?

SELECT artist_name, COUNT(artist_name) AS total_songs, SUM(popularity)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY SUM(popularity) desc
LIMIT 10;

SELECT artist_name, COUNT(artist_name) AS total_songs, AVG(popularity)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
ORDER BY AVG(popularity) desc
LIMIT 10;
